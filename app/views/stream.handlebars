<script src="https://cdn.rawgit.com/showdownjs/showdown/1.0.2/dist/showdown.min.js"></script>

<div class="container">
    <div class="row stream moviesList">
        <div class="row thumbnails" id="getMovies">
                <div class="movie">
                    <div class="poster" style="background-image: url('{{ movie.poster}}');">
                    </div>
                    <div class="movie-infos">
                        <h4>
                            {{ movie.title }} {{#if movie.year.from}} ({{ movie.year.from }}) {{else}} ({{movie.year}}
                            ) {{/if}}
                        </h4>
                        <small class="movie-basics text-muted">
                                <span class="rated">{{#if movie.rated }} {{ movie.rated }} {{else}}
                                    NOT RATED {{/if}}</span>
                            {{ movie.runtime }}min - {{ movie.genres }} - Seeders: {{torrent.seeders}}
                        </small>
                        <p class="imdb-rating"><strong>IMDB
                            Rating: {{#if movie.imdb.rating }} {{ movie.imdb.rating }}</strong>/10
                                (votes: {{ movie.imdb.votes }}) {{else}} N/A {{/if}}</p>
                        <!--p class="plot"><em>{{ movie.plot }}</em></p-->
                        <!--p class="director"><strong>Director: </strong>{{ director }}</p>
							<p class="stars"><strong>Stars: </strong>{{ actors }}</p-->
                        <small class="movie-basics text-muted">{{torrent.name}}</small>
                        {{#if movie.actors }}<p class="stars"><strong>Actors :</strong> {{movie.actors }}</p>{{/if}}
                        {{#if movie.imdb }}{{#if movie.imdb.id }}<p><a
                                href="http://www.imdb.com/title/{{movie.imdb.id}}">IMDB's page</a></p>{{/if}}{{/if}}

                    </div>
                    {{#if movie.plot }}
                        <hr>
                        <p class="plot"><strong>Plot: </strong>{{movie.plot}}</p>
                    {{/if}}
                </div>
        </div>

        <div id="videoContainer" class="video-container thumbnails row">
            <div class="movie">

                <video id="video" class="video-js vjs-sublime-skin videojs-stream col-sm-12 "
                       data-setup='{"example_option":true}' controls
                       preload="none">

                    <track label="English" kind="captions" srclang="en" src="http://localhost:3000/test.vtt" default>
                    <track label="French" kind="captions" srclang="fr" src="http://localhost:3000/test.vtt">

                    To view this video please enable JavaScript, and consider upgrading to a web browser that
                    <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
                </video>
                <div id="progresBar">
                    <div class="progress col-xs-11 nopadding">
                        <div id="progressTime" class="progress-bar" role="progressbar" aria-valuenow="60"
                             aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                    <span class="currentTime" style="
    color: white;
    text-shadow: 2px 0 0 #000, -2px 0 0 #000, 0 2px 0 #000, 0 -2px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;
"></span>
                        </div>
                    </div>
                    <div id="duration" class="col-xs-1"></div>
                </div>
                <p id="mag" style="display:none">{{ magnet }}</p>
            </div>
        </div>



        <div id="test" class="wait thumbnails row">
            <div class="movie">
                <p class="loadingText hidden">Chargement de votre vidéo</p>
                <div id="waiting">
                    <div id="progressConvert" class="wait-screen col-xs-12 nopadding hidden">
                        <div id="convertPro" class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0"
                             aria-valuemax="100" style="width: 0%;">
                        <span class="currentPercent" style="
    color: white;
    text-shadow: 2px 0 0 #000, -2px 0 0 #000, 0 2px 0 #000, 0 -2px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;
">0%</span>
                        </div>
                    </div>
                </div>
                <button class="col-xs-4 col-xs-offset-4" id="playMe">Lancer le film</button>
            </div>
        </div>

        <div class="comments">
            <div class="form-group">
                <div id="preview">

                </div>
                <label for="comment">Comment:</label>
                <textarea class="form-control" rows="5" id="comment"></textarea>
                <button type="button" id="addComment" class="btn btn-primary">Add my comment</button>
            </div>
            <div class="AllMsg">
                {{#each comment}}
                    <div class="message">
                        <div class="avatar col-xs-12 col-sm-2 col-md-1 col-lg-1">
                            <img class="img-thumbnail" src="{{this.user.avatar}}" alt="">
                            <span class="col-sm-11 info-com">
                                <span class="username">
                                    <a href="/app/user/{{this.user.id}}">{{this.user.username}}</a>
                                    </span>
                                <span class="date">{{formatTime this.date "DD/MM/YY"}}</span>
                            </span>
                        </div>
                        <div id='markdown' class="text col-xs-12 col-sm-10">
                            {{this.text}}
                        </div>
                    </div>
                {{/each}}
            </div>
        </div>
    </div>
</div>
<script>

    var protectEntry = function(message) {
        // Return a the same string with escaped "<script>" tags to avoid code injection
        message = message.replace(/&amp/g, '&');
        message = message.replace(/&lt;/g, '<');
        message = message.replace(/&gt;/g, '>');
        return (message);
    }
    window.onload = function() {
        var converter = new showdown.Converter();
        var pad = document.getElementById('comment');
        var markdownArea = document.getElementById('preview');
        $('.text').each(function(elem)
        {
            console.log($(this).text());
            html = converter.makeHtml($(this).text().trim());
            console.log(html);
            $(this).html(html);

        })

        var convertTextAreaToMarkdown = function(){
            var markdownText = pad.value;
            html = converter.makeHtml(markdownText);
            markdownArea.innerHTML = html;
        };

        pad.addEventListener('input', convertTextAreaToMarkdown);

        convertTextAreaToMarkdown();
    };

    var isDownload = {{ isDownload }};
    var minTOHHMM = (min) => {
        var h = parseInt(min / 60);
        var min = parseInt(min - (60 * h));
        if (h == 0)
            h = "00";
        if (min.toString().length == 1)
            min = '0' + min;
        return (h + ":" + min + ":00");

    }


    $('#addComment').on('click', function(e)
    {
        var text = $('#comment').val();
        console.log(text);
        if(text) {
            $.post('/api/comment/addComment', {comments: text, torrentId: {{torrentId}} })
                    .done(function (data) {
                        if (data != 'error')
                        {
                        var formattedDate = new Date(data.date);
                        var d = formattedDate.getDate();
                        var m =  formattedDate.getMonth();
                        m += 1;  // JavaScript months are 0-11
                        var y = formattedDate.getFullYear().toString().substr(2,2);
                        var date = d + "/" + m + "/" + y;
                        var converter = new showdown.Converter();
                        var text = converter.makeHtml(data.text);

                        $('.AllMsg').prepend('<div class="message"><div class="avatar col-xs-12 col-sm-2 col-md-1 col-lg-1"><img class="img-thumbnail" src="'+data.user.avatar+'" alt=""><span class="col-sm-11 info-com"><span class="username">'+ data.user.username +'</span><br><span class="date">' + date + '</span></span></div><div class="text col-xs-12 col-sm-10"> <p>' +  text + ' </p> </div> </div>');
                        $('.comments').prepend('<div class="alert alert-success">Votre commentaire a été envoyé avec succès</div>');
                        $('#comment').val('');
                        }
                        else
                        {
                            $('.comments').prepend('<div class="alert alert-danger">Une erreur inconnu est survenu</div>');
                        }
                    });
        }
        else
        {
            alert('Vous commentaire est trop court');
        }
        e.preventDefault();
    })
    $('#duration').html(minTOHHMM({{ duration }}));
    socket.on('getPercent', function (data) {
        $('#dlProg').css('width', data + '%');
        $('.percentDL').html(data + "%");

    });

    socket.on('progressDL', function (data) {
        $('#convertPro').css('width', data + '%');
        $('.currentPercent').html(data + "%");
    });

    socket.on('convertDone', function (data) {
        console.log("convert");
        $('#videoContainer').removeClass('hidden');
        $('#test').addClass('hidden');
    });
    socket.on('error', function (data) {
        var msg = "<div class='col-xs-12 alert alert-danger'>";
        if (data == "badExt") {
            msg += "Impossible de lire ce format de fichier";
        }
        else if (data == "unknown") {
            msg += "Erreur inconnue est survenu";
        }
        msg += "</div>";
        console.log("MSG" + msg);
        $('.stream').prepend(msg);

    });

    if (isDownload == true) {
            console.log('remove');
            $('#video').removeClass('videojs-stream');
            $('#progresBar').addClass('hidden');
        }
    socket.on('update', function (data) {
//        console.log(data);
//        $("#test").html(data);
    });

</script>
<script src="http://vjs.zencdn.net/5.8.8/video.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/videojs-contrib-hls/3.6.12/videojs-contrib-hls.js"></script>
<script>

    var toHHMMSS = (secs) => {
        var sec_num = parseInt(secs, 10)
        var hours = Math.floor(sec_num / 3600) % 24
        var minutes = Math.floor(sec_num / 60) % 60
        var seconds = sec_num % 60
        return [hours, minutes, seconds]
                .map(v => v < 10 ? "0" + v : v)
                .filter((v, i) => v !== "00" || i > 0)
                .join(":")
    }
    var url = "http://localhost:3000/app/torrent/{{torrentId}}/{{duration}}/magnet" + $("#mag").html();
    var player = videojs('video');
    player.src({
        src: url,
        type: 'video/mp4',
        withCredentials: true
    });
    $('#playMe').on('click', function(e)
    {
        $('#progressConvert').removeClass('hidden');
        $('.loadingText').removeClass('hidden');
        $('#playMe').addClass('hidden');
        player.play();
    })
    setInterval(function () {
        var whereYouAt = player.currentTime();
        whereYouAt = parseInt(whereYouAt);
        var duration = $('#duration').html();
        var a = duration.split(':');
        var secondsTotal = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
        var percent = (whereYouAt * 100) / secondsTotal;
        $('#progressTime').css('width', percent + '%');
        $('.currentTime').html(toHHMMSS(whereYouAt));

    }, 1000);


</script>



